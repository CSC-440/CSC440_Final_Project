package models;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class ChocoServiceProvidedModel {
    private Map<String, Object> chocoServiceProvided;

    /**
     * Constructor
     */
    public ChocoServiceProvidedModel() {
        this.chocoServiceProvided = new HashMap<>();
    }
    
    public int createChocoServiceProvided(String chocoServiceProvidedIdNumber, String memberNumberService, String providerNumberServicing, String dateServiced, String dateServicedRecorded, String serviceComment){
        
        ChocoServiceProvidedTable usr = new ChocoServiceProvidedTable();

        usr.setChocoServiceProvidedIdNumber(chocoServiceProvidedIdNumber);
        usr.setMemberNumberService(memberNumberService);
        usr.setProviderNumberServicing(providerNumberServicing);
        usr.setDateServiced(dateServiced);
        usr.setDateServicedRecorded(dateServicedRecorded);
        usr.setServiceComment(serviceComment);
        chocoServiceProvided.put(chocoServiceProvidedIdNumber, usr);
    
        return 1;
    }
    
    /**
     * Check to find if a user is available
     * @param id
     * @return
     */
    public boolean checkChocoServiceProvided(String id) {
        Iterator it = chocoServiceProvided.entrySet().iterator();
        while (it.hasNext()) {
            Map.Entry pair = (Map.Entry)it.next();
            ChocoServiceProvidedTable u = (ChocoServiceProvidedTable)pair.getValue();
            if((u.getChocoServiceProvidedIdNumber().equals(id)))
                return false;
        }
        return true;
    }
    
    public int updateChocoServiceProvided(String chocoServiceProvidedIdNumber, String memberNumberService, String providerNumberServicing, String dateServiced, String dateServicedRecorded, String serviceComment){

        ChocoServiceProvidedTable usr = (ChocoServiceProvidedTable)chocoServiceProvided.get(chocoServiceProvidedIdNumber);

        usr.setMemberNumberService(memberNumberService);
        usr.setProviderNumberServicing(providerNumberServicing);
        usr.setDateServiced(dateServiced);
        usr.setDateServicedRecorded(dateServicedRecorded);
        usr.setServiceComment(serviceComment);
        chocoServiceProvided.put(chocoServiceProvidedIdNumber, usr);
    
        return 1;
    }
    
    public boolean removeChocoServiceProvided(String id) {
        if(!checkChocoServiceProvided(id)) {
            chocoServiceProvided.remove(id);
            return true;    
        }
        return false;
    }
    public List sendElements() {
        List<Object> ret = new ArrayList<>(chocoServiceProvided.values());
        return ret;
    }

    public List sendChocoServiceProvidedsId() {
        List<Object> ret = new ArrayList<>(chocoServiceProvided.keySet());
        return ret;
    }

} // Class generated by : Benjamin Haos
