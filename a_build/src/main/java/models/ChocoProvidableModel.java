package models;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class ChocoProvidableModel {
    private Map<String, Object> chocoProvidable;

    /**
     * Constructor
     */
    public ChocoProvidableModel() {
        this.chocoProvidable = new HashMap<>();
    }
    
    public int createChocoProvidable(String providableServiceIdNum, String providableServiceDescription){
        
        ChocoProvidableTable usr = new ChocoProvidableTable();

        usr.setProvidableServiceIdNum(providableServiceIdNum);
        usr.setProvidableServiceDescription(providableServiceDescription);
        chocoProvidable.put(providableServiceIdNum, usr);
    
        return 1;
    }
    
    /**
     * Check to find if a user is available
     * @param id
     * @return
     */
    public boolean checkChocoProvidable(String id) {
        Iterator it = chocoProvidable.entrySet().iterator();
        while (it.hasNext()) {
            Map.Entry pair = (Map.Entry)it.next();
            ChocoProvidableTable u = (ChocoProvidableTable)pair.getValue();
            if((u.getProvidableServiceIdNum().equals(id)))
                return false;
        }
        return true;
    }
    
    public int updateChocoProvidable(String providableServiceIdNum, String providableServiceDescription){

        ChocoProvidableTable usr = (ChocoProvidableTable)chocoProvidable.get(providableServiceIdNum);

        usr.setProvidableServiceDescription(providableServiceDescription);
        chocoProvidable.put(providableServiceIdNum, usr);
    
        return 1;
    }
    
    public boolean removeChocoProvidable(String id) {
        if(!checkChocoProvidable(id)) {
            chocoProvidable.remove(id);
            return true;    
        }
        return false;
    }
    public List sendElements() {
        List<Object> ret = new ArrayList<>(chocoProvidable.values());
        return ret;
    }

    public List sendChocoProvidablesId() {
        List<Object> ret = new ArrayList<>(chocoProvidable.keySet());
        return ret;
    }

} // Class generated by : Benjamin Haos
